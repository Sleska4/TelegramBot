import config
import telebot
import random

bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(commands=['start'])
def welcome(message):
    img = open(config.img[random.randint(0, len(config.img)) - 1], 'rb')
    bot.send_sticker(message.chat.id, img)
    bot.send_message(message.chat.id, config.hello_text[random.randint(0,
    len(config.hello_text) - 1)].format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=config.menu())


def add_f(message):
    add = message.text
    config.arr.append(['', add])
    print(config.arr)
    bot.send_message(message.chat.id, '–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω')
    time = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    time_add = telebot.types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å ‚è∞")
    time_no = telebot.types.KeyboardButton("–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ ‚ùå")
    time.add(time_add, time_no)
    bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º—è?'.format(message.from_user, bot.get_me()), reply_markup=time)


def data_add(message):
    data = message.text
    if data in ['1', '2', '3', '4', '5', '6', '7']:
        config.arr[len(config.arr) - 1].append('mod' + str(data))
        bot.send_message(message.chat.id, '–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {}'.format('mod' + str(data)), reply_markup=config.menu())
    else:
        try:
            data_boolean = False
            data = str(data)
            data = data.split('.')
            if 1 <= int(data[0]) <= 31:
                if 1 <= int(data[1]) <= 12:
                    data_boolean = True
            if data_boolean:
                data = '.'.join(data)
                config.arr[len(config.arr) - 1].append(data)
                bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã ‚úÖ', reply_markup=config.menu())
                print(config.arr, 'test')
        except:
            if data == ['–û–¢–ú–ï–ù–ê ‚ùå']:  # –ü–æ–∫–∞ –ø–æ–¥ –≤–æ–ø—Ä–æ—Å–æ–º
                config.arr[len(config.arr) - 1].append('mod1')  # –ü–æ–∫–∞ –ø–æ–¥ –≤–æ–ø—Ä–æ—Å–æ–º
                bot.send_message(message.chat.id, '–î–∞—Ç–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å', reply_markup=config.menu())
            else:
                bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', reply_markup=config.menu())
                data = bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É?', reply_markup=config.cancel())
                bot.register_next_step_handler(data, data_add)


def time_add(message):
    time = message.text
    if time != "–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ ‚ùå":
        try:
            time_boolean = False
            time = str(time)
            time = time.split(':')
            if 0 <= int(time[0]) < 24:
                if 0 <= int(time[1]) < 60:
                    if 0 <= int(time[2]) < 60:
                        time_boolean = True
            if time_boolean:
                time = ':'.join(time)
                config.arr[len(config.arr) - 1].append(time)
                bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã ‚úÖ')
                data = bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É?', reply_markup=config.cancel())
                bot.register_next_step_handler(data, data_add)

            else:
                bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –∫–∞–∫—É—é-—Ç–æ –ø–æ–µ–±–µ–Ω—å üò±', reply_markup=config.menu())
                del config.arr[-1]
        except:
            bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –∫–∞–∫—É—é-—Ç–æ –ø–æ–µ–±–µ–Ω—å üò±', reply_markup=config.menu())
            del config.arr[-1]
    else:
        del config.arr[-1]
        bot.send_message(message.chat.id, '–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã üóë', reply_markup=config.menu())


#  –£–¥–∞–ª–µ–Ω–∏–µ
def del_index(message):
    bot.send_message(message.chat.id, config.LIST(config.arr))
    Del = message.text
    Del = Del.split(' ')
    arr_test = config.arr

    for i in range(len(Del) - 1):
        if int(Del[i]) < len(config.arr):
            del arr_test[int(Del[i]) - 1]
    config.arr = arr_test
    bot.send_message(message.chat.id, arr_test, reply_markup=config.menu())


@bot.message_handler(content_types=['text'])
def bot_list(message):
    if message.chat.type == 'private':
        if message.text == '–°–ø–∏—Å–æ–∫ üóí':
            if config.arr != []:
                print(config.arr)
                bot.send_message(message.chat.id, config.LIST(config.arr))
            else:
                bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤–∞—à —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç')

        elif message.text == "–î–æ–±–∞–≤–∏—Ç—å üìå":
            add = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')
            bot.register_next_step_handler(add, add_f)

        elif message.text == "–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ ‚ùå":
            del config.arr[-1]
            bot.send_message(message.chat.id, '–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã üóë', reply_markup=config.menu())

        elif message.text == "–î–æ–±–∞–≤–∏—Ç—å ‚è∞":
            time = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è:')
            bot.register_next_step_handler(time, time_add)

        elif message.text == "–£–¥–∞–ª–∏—Ç—å üóë":
            bot.send_message(message.chat.id, config.LIST(config.arr))
            Del = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:')
            bot.register_next_step_handler(Del, del_index)


bot.polling(none_stop=True)